{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navignation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setinit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.065d2124.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want delete this nweet?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  onChange={onChange}\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  autoFocus\n                  required\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbase\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      const response = await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"taxt\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navignation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  // firebase에서 정보 가져왔는지 확인\n  const [init, setinit] = useState(false);\n  // 유저 로그인 정보\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 유저 정보가 변경될 때 마다 실행 (추정)\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // 유저 정보 저장\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setinit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {/* firebase 접근전이면 initializing... 표시 */}\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}